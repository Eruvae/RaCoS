#############################################################################
# Makefile for building: On-Board-Software
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sun Aug 7 10:57:40 2016
# Project:  On-Board-Software.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile On-Board-Software.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT
CFLAGS        = -pipe -O2 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I../../../rodos/rodos-core/api
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)    
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = topics.cpp \
		telemetry.cpp \
		sensorIMU.cpp \
		spihelper.cpp \
		comminterfaces.cpp \
		sensorhousekeeping.cpp \
		telecommand.cpp \
		actuatorhandler.cpp \
		storagecontroller.cpp \
		murmur.cpp \
		healthwatchdog.cpp \
		sdcomm.cpp 
OBJECTS       = ./topics.o \
		./telemetry.o \
		./sensorIMU.o \
		./spihelper.o \
		./comminterfaces.o \
		./sensorhousekeeping.o \
		./telecommand.o \
		./actuatorhandler.o \
		./storagecontroller.o \
		./murmur.o \
		./healthwatchdog.o \
		./sdcomm.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		On-Board-Software.pro
QMAKE_TARGET  = On-Board-Software
DESTDIR       = 
TARGET        = On-Board-Software

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: On-Board-Software.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile On-Board-Software.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile On-Board-Software.pro

dist: 
	@$(CHK_DIR_EXISTS) On-Board-Software1.0.0 || $(MKDIR) On-Board-Software1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) On-Board-Software1.0.0/ && (cd `dirname On-Board-Software1.0.0` && $(TAR) On-Board-Software1.0.0.tar On-Board-Software1.0.0 && $(COMPRESS) On-Board-Software1.0.0.tar) && $(MOVE) `dirname On-Board-Software1.0.0`/On-Board-Software1.0.0.tar.gz . && $(DEL_FILE) -r On-Board-Software1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) On-Board-Software stm32f4.hex stm32f4.elf
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


rodos:
	/bin/bash -c "cd /home/rodos/rodos/rodos-core && source make/rodosenvs && cd /home/rodos/workspace_qt/RaCoS/On-Board-Software && stm32f4-executable topics.h telemetry.h structs.h sensorIMU.h spihelper.h comminterfaces.h sensorhousekeeping.h telecommand.h actuatorhandler.h storagecontroller.h murmur.h healthwatchdog.h sdcomm.h topics.cpp telemetry.cpp sensorIMU.cpp spihelper.cpp comminterfaces.cpp sensorhousekeeping.cpp telecommand.cpp actuatorhandler.cpp storagecontroller.cpp murmur.cpp healthwatchdog.cpp sdcomm.cpp && cp -f flash_script On-Board-Software && chmod +x On-Board-Software"

check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

./topics.o: topics.cpp topics.h \
		structs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./topics.o topics.cpp

./telemetry.o: telemetry.cpp telemetry.h \
		topics.h \
		structs.h \
		comminterfaces.h \
		murmur.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./telemetry.o telemetry.cpp

./sensorIMU.o: sensorIMU.cpp sensorIMU.h \
		comminterfaces.h \
		spihelper.h \
		topics.h \
		structs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./sensorIMU.o sensorIMU.cpp

./spihelper.o: spihelper.cpp spihelper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./spihelper.o spihelper.cpp

./comminterfaces.o: comminterfaces.cpp comminterfaces.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./comminterfaces.o comminterfaces.cpp

./sensorhousekeeping.o: sensorhousekeeping.cpp sensorhousekeeping.h \
		topics.h \
		structs.h \
		comminterfaces.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./sensorhousekeeping.o sensorhousekeeping.cpp

./telecommand.o: telecommand.cpp telecommand.h \
		topics.h \
		structs.h \
		comminterfaces.h \
		murmur.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./telecommand.o telecommand.cpp

./actuatorhandler.o: actuatorhandler.cpp actuatorhandler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./actuatorhandler.o actuatorhandler.cpp

./storagecontroller.o: storagecontroller.cpp storagecontroller.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./storagecontroller.o storagecontroller.cpp

./murmur.o: murmur.cpp murmur.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./murmur.o murmur.cpp

./healthwatchdog.o: healthwatchdog.cpp healthwatchdog.h \
		topics.h \
		structs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./healthwatchdog.o healthwatchdog.cpp

./sdcomm.o: sdcomm.cpp sdcomm.h \
		comminterfaces.h \
		spihelper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ./sdcomm.o sdcomm.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

